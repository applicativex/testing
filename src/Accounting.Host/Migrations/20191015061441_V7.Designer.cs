// <auto-generated />
using System;
using Accounting.Host;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Accounting.Host.Migrations
{
    [DbContext(typeof(AccountingContext))]
    [Migration("20191015061441_V7")]
    partial class V7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Accounting.Host.AccountData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Currency");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb7ab20e-3130-47fc-a6a7-dbcd30a60a53"),
                            Currency = 1,
                            UserId = new Guid("6d452541-7c1d-4ba9-b480-d21ac3b30b83")
                        },
                        new
                        {
                            Id = new Guid("b4db2e93-4b3b-4172-ba2d-568b7674b1d5"),
                            Currency = 2,
                            UserId = new Guid("6d452541-7c1d-4ba9-b480-d21ac3b30b83")
                        },
                        new
                        {
                            Id = new Guid("4eb3ae16-18ce-4fd9-a0e3-ccc1b87bfc11"),
                            Currency = 3,
                            UserId = new Guid("6d452541-7c1d-4ba9-b480-d21ac3b30b83")
                        });
                });

            modelBuilder.Entity("Accounting.Host.AccountEntryData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<decimal>("Amount");

                    b.Property<DateTimeOffset>("EntryDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountEntries");
                });

            modelBuilder.Entity("Accounting.Host.AccountTransactionData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("CreditEntryId");

                    b.Property<Guid>("DebitEntryId");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("TransactionDate");

                    b.HasKey("Id");

                    b.HasIndex("CreditEntryId")
                        .IsUnique();

                    b.HasIndex("DebitEntryId")
                        .IsUnique();

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("Accounting.Host.UserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d452541-7c1d-4ba9-b480-d21ac3b30b83"),
                            Email = "system@gmail.com",
                            FirstName = "SYSTEM",
                            LastName = "SYSTEM"
                        });
                });

            modelBuilder.Entity("Accounting.Host.AccountData", b =>
                {
                    b.HasOne("Accounting.Host.UserData", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounting.Host.AccountEntryData", b =>
                {
                    b.HasOne("Accounting.Host.AccountData", "Account")
                        .WithMany("Entries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounting.Host.AccountTransactionData", b =>
                {
                    b.HasOne("Accounting.Host.AccountEntryData")
                        .WithOne()
                        .HasForeignKey("Accounting.Host.AccountTransactionData", "CreditEntryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Accounting.Host.AccountEntryData")
                        .WithOne()
                        .HasForeignKey("Accounting.Host.AccountTransactionData", "DebitEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
